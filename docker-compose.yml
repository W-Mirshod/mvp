version: "3.9"

x-backend-environment: &backend-environment
  DJANGO_SETTINGS_MODULE: settings.settings.prod
  CELERY_BROKER_URL: redis://redis:6379/0
  CELERY_RESULT_BACKEND: redis://redis:6379/0

x-backend-base: &backend-base
  build:
    context: .
    dockerfile: ./Dockerfile
  volumes:
    - ./:/mm
    - ./logs:/mm/logs/
    - ./src/static:/mm/src/static/
    - ./src/media:/mm/src/media/

x-backend: &backend
  image: app:django
  <<: *backend-base
  environment:
    <<: *backend-environment

services:

  # Redis
  redis:
    image: redis:alpine
    container_name: mm_redis
    ports:
      - 6380:6379

  # Database Postgres
  db:
    image: postgres:15.4
    restart: always
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=mega_mailer
    ports:
      - ${POSTGRES_PORT:-5433}:5432
    container_name: mm_postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d mega_mailer" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  # Django WSGI App
  wsgi-server:
    <<: *backend
    ports:
      - 8000:8000
    links:
      - db
      - redis
    container_name: ap_wsgi
    command: >
     sh -c "./scripts/wait-for-it.sh db:5432 -- sh ./scripts/entrypoint-wsgi-web.sh"
    depends_on:
      db:
        condition: service_healthy

  # Django WSGI App for debug in docker
  pycharm-wsgi-server:
    <<: *backend
    ports:
      - 8025:8025
    links:
      - db
      - redis
    container_name: pycharm_wsgi
    depends_on:
      db:
        condition: service_healthy

  # Celery
  celery-worker-beat:
    restart: always
    <<: *backend
    command: >
      sh -c "./scripts/wait-for-it.sh db:5432 -- sh ./scripts/entrypoint-worker.sh"
    volumes:
      - .:/mm
    container_name: mm_celery
    links:
      - redis
    depends_on:
      - db
      - redis
      - wsgi-server

  # Flower
  flower:
    <<: *backend
    command: >
      sh -c "./scripts/wait-for-it.sh db:5432 -- sh ./scripts/entrypoint-flower.sh"
    volumes:
      - .:/mm
    ports:
      - 5555:5555
    links:
      - redis
      - celery-worker-beat
    container_name: mm_flower
    depends_on:
      - wsgi-server
      - redis
      - celery-worker-beat
