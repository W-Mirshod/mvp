name: Run Tests

# triggers for our workflow
on:
  # opening a pull request
  pull_request:
    branches:
      - '**'
  # any code pushed
  push:
    branches:
      - '**'

# three job definition
jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.4
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: mega_mailer
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    env:
      DJANGO_SETTINGS_MODULE: settings.settings_test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/mega_mailer
      CELERY_BROKER_URL: redis://localhost:6379/0
      CELERY_RESULT_BACKEND: redis://localhost:6379/0

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.12

    - name: Upgrade Pip # check and upgrade Pip
      run: python -m pip install --upgrade pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Check Syntax # check code formatting
      run: |
        pip install pycodestyle
        pycodestyle --exclude=./src/utils/validators.py --statistics --max-line-length=500 .
    - name: Check syntax with flake8
      run: |
        pip install flake8
        flake8

    - name: Wait for Postgres
      run: |
        while ! pg_isready -h localhost -p 5432; do
          echo "Waiting for Postgres to be ready..."
          sleep 1
        done

    - name: Add .env
      run: |
        touch ./src/settings/settings/.env
        echo DEBUG=True >> ./src/settings/.env
        echo SECRET_KEY=secrets.SECRET_KEY >> ./src/settings/settings/.env
        echo STATIC_ROOT=var/www/staticfiles >> ./src/settings/settings/.env
        echo SQL_ENGINE=django.db.backends.postgresql >> ./src/settings/settings/.env
        echo SQL_USER=postgres >> ./src/settings/settings/.env
        echo SQL_PASSWORD=postgres >> ./src/settings/settings/.env
        echo SQL_DATABASE=mega_mailer >> ./src/settings/settings/.env
        echo SQL_PORT=5432 >> ./src/settings/settings/.env
        echo CELERY_ACCEPT_CONTENT=application/json >> ./src/settings/settings/.env
        cd src/
        poetry run python manage.py test apps/

    - name: Apply migrations
      run: |
        python src/manage.py migrate

    - name: Run tests
      run: |
        python src/manage.py test