# Generated by Django 5.0.6 on 2024-11-26 00:34

import apps.users.models.users
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='e-mail')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Email verified')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_one_time_jwt_created', models.BooleanField(default=False, verbose_name='One-time JWT created')),
                ('jwt_max_out', models.DateTimeField(blank=True, null=True)),
                ('role', models.CharField(choices=[('stuff', 'STUFF'), ('admin', 'ADMIN'), ('user', 'USER'), ('owner_company', 'OWNER_COMPANY')], default='user', max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ('-id',),
                'abstract': False,
            },
            managers=[
                ('objects', apps.users.models.users.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserTariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('expired_at', models.DateTimeField(blank=True, null=True, verbose_name='Date of expiration')),
                ('tariff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.tariff')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tariff', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User`s tariff',
                'verbose_name_plural': 'User`s tariffs',
            },
        ),
        migrations.CreateModel(
            name='BlackListedAccessToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jti', models.CharField(max_length=255, unique=True)),
                ('jti_refresh', models.CharField(max_length=255, unique=True)),
                ('token', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('blacklisted_at', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blacklisted_access_token_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'BlackListed access token',
                'verbose_name_plural': 'BlackListed access tokens',
                'ordering': ['-id'],
                'unique_together': {('token', 'user')},
            },
        ),
    ]
